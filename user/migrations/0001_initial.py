# Generated by Django 4.2.5 on 2023-09-10 12:14

import uuid

import phonenumber_field.modelfields
from django.db import migrations, models

import user.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UsrUser",
            fields=[
                (
                    "seq_number",
                    models.PositiveIntegerField(
                        auto_created=True, editable=False, unique=True
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.CharField(blank=True, max_length=38, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=38, null=True)),
                ("association_id", models.CharField(max_length=38)),
                ("association_type_term", models.CharField(max_length=39)),
                ("client_id", models.UUIDField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=61, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=150, null=True)),
                ("last_name", models.CharField(blank=True, max_length=150, null=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("token", models.TextField(blank=True, null=True)),
                ("status_term", models.CharField(blank=True, max_length=39, null=True)),
                (
                    "profile_image",
                    models.FileField(
                        blank=True, null=True, upload_to="media/images/profile_images"
                    ),
                ),
                ("display_name", models.CharField(max_length=61)),
                (
                    "mobile_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "user_type_term",
                    models.CharField(blank=True, max_length=39, null=True),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("is_it_admin", models.BooleanField(default=False)),
                ("forget_password_token", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", user.models.UserManager()),
            ],
        ),
    ]
